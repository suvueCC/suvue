server:
  port: 80

spring:
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/suvue-test?useUnicode=true&characterEncoding=UTF-8&useSSL=false&autoReconnect=true&failOverReadOnly=false&serverTimezone=GMT%2B8
    username: root
    password: root
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    initialization-mode: always
    continue-on-error: true
    hikari:
      minimum-idle: 5
      connection-test-query: SELECT 1 FROM DUAL
      maximum-pool-size: 20
      auto-commit: true
      idle-timeout: 30000
      pool-name: SpringBootDemoHikariCP
      max-lifetime: 60000
      connection-timeout: 30000
  redis:
    host: localhost
    # 连接超时时间（记得添加单位，Duration）
    timeout: 10000ms
    # Redis默认情况下有16个分片，这里配置具体使用的分片
    database: 0
    lettuce:
      pool:
        # 连接池最大连接数（使用负值表示没有限制） 默认 8
        max-active: 8
        # 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
        max-wait: -1ms
        # 连接池中的最大空闲连接 默认 8
        max-idle: 8
        # 连接池中的最小空闲连接 默认 0
        min-idle: 0
  cache:
    # 一般来说是不用配置的，Spring Cache 会根据依赖的包自行装配
    type: redis
  flyway:
    enabled: true
    # 项目每次启动时，校验路径下是否存在 SQL 文件
    check-location: false
    # 这张表里记录数据库脚本执行的历史记录
    table: sv_version
    # Flyway 默认情况下会去清空原始库，再重新执行 SQL 脚本，这在生产环境下是不可取的，因此需要将这个配置关闭
    clean-disabled: true
    # 迁移前校验 SQL 文件是否存在问题
    validate-on-migrate: true
    # 最开始已经存在表结构，且不存在 flyway_schema_history 表时，需要设置为 true
    baseline-on-migrate: true
    # 基础版本 0
    baseline-version: 0
  security:
    user:
      name: user
      password: 123

logging:
  level:
    cn.suvue: debug
    cn.suvue.module: trace

mybatis:
  configuration:
    # 下划线转驼峰
    map-underscore-to-camel-case: true
  mapper-locations: classpath:mappers/**/*.xml
  type-aliases-package: cn.suvue.module.entity

jwt:
  config:
    key: suvue
    ttl: 600000
    remember: 604800000

custom:
  config:
    ignores:
      # 需要过滤的 post 请求
      post:
        - "/api/auth/login"
        - "/api/auth/logout"
      # 需要过滤的请求，不限方法
      pattern:
        - "/test/**"

